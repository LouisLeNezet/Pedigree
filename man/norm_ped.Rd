% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/norm_data.R
\name{norm_ped}
\alias{norm_ped}
\title{Normalise dataframe}
\usage{
norm_ped(
  ped_df,
  na_strings = c("NA", ""),
  missid = NA_character_,
  try_num = FALSE
)
}
\arguments{
\item{ped_df}{A data.frame with the individuals informations.
The minimum columns required are \code{indID}, \code{fatherId}, \code{motherId} and
\code{gender}.
The \code{famid} column can also be used to specify the family of the
individuals and will be merge to the \code{id} field separated by an
underscore.
The following columns are also recognize \code{sterilisation}, \code{available},
\code{vitalStatus}, \code{affection}. The four of them will be transformed with the
\code{\link[=vect_to_binary]{vect_to_binary()}} function.
They respectively correspond to the sterilisation status,
the availability status, the death status and the affection status
of the individuals. The values recognized for those columns are \code{1} or
\code{0}.}

\item{na_strings}{Vector of strings to be considered as NA values}

\item{try_num}{Boolean defining if the function should try to convert
all the columns to numeric.}
}
\value{
A dataframe with the errors identified in the \code{error} column
}
\description{
Normalise dataframe for Pedigree object
}
\details{
Normalise a dataframe and check for columns correspondance
to be able to use it as an input to create Pedigree object.
Multiple test are done and errors are checked.
Sex is calculated based in the \code{gender} column the following notations
are accepted: f, woman, female, 2 and m, man, male, 1.
The \code{steril} column need to be a boolean either TRUE, FALSE or 'NA'.
Will be considered available any individual with no 'NA' values in the
\code{available} column.
Duplicated \code{indId} will nullify the relationship of the individual.
All individuals with errors will be remove from the dataframe and will
be transfered to the error dataframe.
}
\examples{
df <- data.frame(
    indId = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
    fatherId = c("A", 0, 1, 3, 0, 4, 1, 0, 6, 6),
    motherId = c(0, 0, 2, 2, 0, 5, 2, 0, 8, 8),
    gender = c(1, 2, "m", "man", "f", "male", "m", "m", "f", "f"),
    available = c("A", "1", 0, NA, 1, 0, 1, 0, 1, 0),
    famid = c(1, 1, 1, 1, 1, 1, 1, 2, 2, 2),
    sterilisation = c("TRUE", "FALSE", TRUE, FALSE, 1, 0, 1, 0, 1, "TRUE"),
    vitalStatus = c("TRUE", "FALSE", TRUE, FALSE, 1, 0, 1, 0, 1, 0),
    affection = c("TRUE", "FALSE", TRUE, FALSE, 1, 0, 1, 0, 1, 0)
)
norm_ped(df)
}
