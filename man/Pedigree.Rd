% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Pedigree.R
\docType{methods}
\name{Pedigree}
\alias{Pedigree}
\alias{Pedigree,numeric-method}
\alias{Pedigree,numeric}
\alias{Pedigree,character-method}
\alias{Pedigree,character}
\alias{Pedigree,data.frame-method}
\alias{Pedigree,data.frame}
\title{Create a Pedigree object}
\usage{
Pedigree(obj, ...)

\S4method{Pedigree}{numeric}(obj, ...)

\S4method{Pedigree}{character}(
  obj,
  dadid,
  momid,
  sex,
  family = NA,
  avail = NULL,
  affected = NULL,
  status = NULL,
  steril = NULL,
  relation = NULL,
  missid = "0",
  col_aff = "affection",
  normalize = TRUE,
  ...
)

\S4method{Pedigree}{data.frame}(
  obj = data.frame(id = character(), dadid = character(), momid = character(), sex =
    numeric(), family = character(), available = numeric(), affection = numeric()),
  relation = data.frame(id1 = character(), id2 = character(), code = numeric(), family =
    character()),
  cols_ren_ped = list(indId = "id", fatherId = "dadid", motherId = "momid", gender =
    "sex", family = "family", sterilisation = "steril", vitalStatus = "status", affection
    = "affected"),
  cols_ren_rel = list(indId1 = "id1", indId2 = "id2"),
  scales = list(fill = data.frame(order = numeric(), column_values = character(),
    column_mods = character(), mods = numeric(), labels = character(), affected =
    logical(), fill = character(), density = numeric(), angle = numeric()), border =
    data.frame(column = character(), mods = numeric(), labels = character(), border =
    character())),
  hints = list(order = NULL, spouse = NULL),
  normalize = TRUE,
  missid = "0",
  col_aff = "affection",
  ...
)
}
\arguments{
\item{obj}{A vector of the individuals identifiers or a data.frame
with the individuals informations.
The minimum columns required are \code{indID}, \code{fatherId}, \code{motherId} and
\code{gender}.
The \code{family} column can also be used to specify the family of the
individuals and will be merge to the \code{id} field separated by an
underscore.
The following columns are also recognize \code{sterilisation}, \code{available},
\code{vitalStatus}, \code{affection}. The four of them will be transformed with the
\code{\link[=vect_to_binary]{vect_to_binary()}} function when the normalisation is selected and will
be set respectively to \code{steril}, \code{avail},
\code{status} and \code{affected}.
If you do not use the normalisation, the columns will be checked to
be \code{0} or \code{1}.
They respectively correspond to the sterilisation status,
the availability status, the death status and the affection status
of the individuals. The values recognized for those columns are \code{1} or
\code{0}.}

\item{...}{Other arguments to pass to the function \code{generate_colors}.}

\item{dadid}{A vector containing for each subject, the identifiers of the
biologicals fathers.}

\item{momid}{vector containing for each subject, the identifiers of the
biologicals mothers.}

\item{sex}{A character, factor or numeric vector corresponding to
the gender of the individuals. The following values are recognized:
\itemize{
\item character() or factor() : "f", "m", "woman", "man", "male", "female",
"unknown", "terminated"
\item numeric() : 1 = "male", 2 = "female", 3 = "unknown", 4 = "terminated"
}}

\item{family}{A vector of family identifiers}

\item{avail}{A numeric vector of availability status of each individual
(e.g., genotyped). The values are:
\itemize{
\item \code{0}  : unavailable
\item \code{1}  : available
\item \code{NA} : availability not known
}}

\item{affected}{A numeric vector of affection status of each individual
(e.g., genotyped). The values are:
\itemize{
\item \code{0}  : unaffected
\item \code{1}  : affected
\item \code{NA} : affection status not known
}}

\item{status}{A numeric vector of vital status of each individual
(e.g., genotyped). The values are:
\itemize{
\item \code{0}  : alive
\item \code{1}  : dead
\item \code{NA} : vital status not known
}}

\item{steril}{A numeric vector of sterilisation status of each individual
(e.g., genotyped). The values are:
\itemize{
\item \code{0}  : not sterilised
\item \code{1}  : sterilised
\item \code{NA} : sterilisation status not known
}}

\item{relation}{A matrix or a data.frame with 3 required columns
(i.e. id1, id2, code) specifying special relationship between pairs
of individuals.
#' The code values are:
\itemize{
\item \code{1} = Monozygotic twin
\item \code{2} = Dizygotic twin
\item \code{3} = twin of unknown zygosity
\item \code{4} = Spouse
}

If \code{famid} is given in the call to create Pedigrees, then
\code{famid} needs to be in the last column of \code{relation}.}

\item{missid}{The missing identifier value. Founders are the individuals with
no father and no mother in the Pedigree
(i.e. \code{dadid} and \code{momid} equal to the value of this variable).
The default for \code{missid} is \code{"0"}.}

\item{col_aff}{A string with the column name to use for the affection status.}

\item{normalize}{A logical to know if the data should be normalised.}

\item{cols_ren_ped}{A named list with the columns to rename for the
pedigree dataframe.}

\item{cols_ren_rel}{A named list with the columns to rename for the
relationship matrix.}

\item{scales}{A list of two data.frame with the scales to use for the
affection status and the other one for the border color (e.g availability).}

\item{hints}{Plotting hints for the Pedigree.
This is a list with components \code{order} and \code{spouse}, the second one
is optional.
\itemize{
\item \strong{order} is a numeric vector with one element per subject in the
Pedigree.  It determines the relative order of subjects within a sibship, as
well as the relative order of processing for the founder couples. (For this
latter, the female founders are ordered as though they were sisters).
\item \strong{spouse} is a matrix with one row per hinted marriage, usually
only a few marriages in a pedigree will need an added hint, for instance
reverse the plot order of a husband/wife pair. Each row contains the
index of the left spouse, the right hand spouse, and the anchor
(i.e : \code{1} = left, \code{2} = right, \code{0} = either).
Children will preferentially appear under the parents of the anchored
spouse.
}}
}
\value{
A Pedigree object.
}
\description{
This constructor help to create a \code{Pedigree} object from
different \code{data.frame} or a set of vectors.
}
\details{
If any errors are found in the data, the function will return
the data.frame with the errors for the Pedigree and the relationship
data.frame.
}
\examples{
data(sampleped)
ped1 <- Pedigree(sampleped[sampleped$family == "1",])
}
