% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_unavailable.R
\name{find_unavailable}
\alias{find_unavailable}
\alias{exclude_unavail_founders}
\alias{exclude_stray_marryin}
\title{Find or trim unavailable subjects in a pedigree}
\usage{
find_unavailable(ped, avail = ped$ped$avail)
}
\arguments{
\item{ped}{A pedigree object with an id, findex, mindex, sex, plus other
optional items}

\item{avail}{Logical vector of availability status (e.g., available) 0/1}

\item{removeID}{vector of subject ids of persons to trim from a pedigree}
}
\value{
`find_unavailable` returns a vector of subject ids for who can be
removed. `trim` returns a trimmed pedigree object.
}
\description{
Find the ID of subjects in a pedigree iteratively, as anyone who is not
available and does not have an available descendant by successively removing
unavailable terminal nodes. `trim` carries out the removal of the
subjects identified by `findUnavailabl`e.
}
\details{
Originally written as pedTrim by Steve Iturria, modified by Dan Schaid 2007,
and now split into the two separate functions: `find_unavailable()`, and
`trim()` to do the tasks separately.  `find_unavailable()`
calls `exclude_stray_marryin` to find stray available marry-ins who are
isolated after trimming their unavailable offspring, and
exclude_unavail_founders.
If the subject ids are character, make sure none of the characters in the
ids is a colon (":"), which is a special character
used to concatenate and split subjects within the utility.
}
\section{Side Effects}{
 relation matrix from `trim` is trimmed of any
special relations that include the subjects to trim.
}

\seealso{
`pedigree.shrink`
}
