% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auto_hint.R
\name{auto_hint}
\alias{auto_hint}
\title{First initial guess for the alignment of a Pedigree}
\usage{
auto_hint(obj, ...)
}
\arguments{
\item{obj}{A Pedigree object}

\item{reset}{If \code{TRUE}, then even if \code{ped} object has hints, reset
them to the initial values}
}
\value{
The \strong{hints} list containing components \code{horder} and \code{spouse}
}
\description{
Compute an initial guess for the alignment of a Pedigree
}
\details{
A Pedigree structure can contain a \code{hints} object which helps to
reorder the Pedigree (e.g. left-to-right order of children within family) so
as to plot with minimal distortion. This routine is used to create an
initial version of the hints. They can then be modified if desired.

This routine would not normally be called by a user. It moves children
within families, so that marriages are on the "edge" of a set children,
closest to the spouse. For pedigrees that have only a single connection
between two families this simple-minded approach works surprisingly well.
For more complex structures hand-tuning of the hints matrix may be required.

The Pedigree in the example below is one where rearranging the founders
greatly decreases the number of extra connections. When \code{auto_hint()} is
called with a a vector of numbers as the second argument, the values for the
founder females are used to order the founder families left to right across
the plot. The values within a sibship are used as the preliminary order of
siblings within a family; this may be changed to move one of them to the
edge so as to match up with a spouse. The actual values in the vector are
not important, only their order.
}
\examples{
data(sampleped)
ped <- Pedigree(sampleped[sampleped$famid == 1, ])
auto_hint(ped)
}
\seealso{
\code{\link[=align]{align()}}, \code{\link[=best_hint]{best_hint()}}
}
