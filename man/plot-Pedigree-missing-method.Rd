% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\docType{methods}
\name{plot,Pedigree,missing-method}
\alias{plot,Pedigree,missing-method}
\alias{plot.pedigree}
\alias{plot,Pedigree}
\title{Plot pedigrees}
\usage{
\S4method{plot}{Pedigree,missing}(
  x,
  aff_mark = TRUE,
  label = NULL,
  ggplot_gen = FALSE,
  cex = 1,
  symbolsize = 1,
  branch = 0.6,
  packed = TRUE,
  align = c(1.5, 2),
  width = 6,
  title = NULL,
  subreg = NULL,
  pconnect = 0.5,
  fam_to_plot = 1,
  legend = FALSE,
  leg_cex = 0.8,
  leg_symbolsize = 0.5,
  leg_loc = NULL,
  ...
)
}
\arguments{
\item{x}{A pedigree object.}

\item{aff_mark}{if TRUE, add a aff_mark to each box corresponding to the value of
the affection column for each filling scale.}

\item{label}{if not NULL, add a label to each box corresponding to the
value of the column given.}

\item{ggplot_gen}{logical, if TRUE add the segments to the ggplot object}

\item{cex}{character expansion of the text}

\item{symbolsize}{size of the symbols}

\item{branch}{defines how much angle is used to connect various levels of
nuclear families.}

\item{packed}{Should the pedigree be compressed, i.e., allow diagonal
lines connecting parents to children in order to have a smaller overall
width for the plot.}

\item{align}{for a packed pedigree, align children under parents \code{TRUE},
to the extent possible given the page width, or align to to the left
margin \code{FALSE}.
This argument can be a two element vector, giving the alignment
parameters, or a logical value.
If \code{TRUE}, the default is \code{c(1.5, 2)}, or numeric the routine
\code{alignped4()} will be called.}

\item{width}{for a packed output, the minimum width of the plot, in
inches.}

\item{title}{The title of the plot.}

\item{subreg}{4-element vector for (min x, max x, min depth, max depth),
used to edit away portions of the plot coordinates returned by
\code{\link[=align]{align()}}.
This is useful for zooming in on a particular region of the pedigree.}

\item{pconnect}{when connecting parent to children the program will try to
make the connecting line as close to vertical as possible, subject to it
lying inside the endpoints of the line that connects the children by at
least \code{pconnect} people.  Setting this option to a large number will
force the line to connect at the midpoint of the children.}

\item{fam_to_plot}{default=1.  If the pedigree contains multiple families,
this parameter can be used to select which family to plot.
It can be a numeric value or a character value. If numeric, it is the
index of the family to plot returned by \code{unique(x$ped$family)}.
If character, it is the family id to plot.}

\item{legend}{default=FALSE.  If TRUE, a legend will be added to the plot.}

\item{leg_cex}{default=0.8.  Controls the size of the legend text.}

\item{leg_symbolsize}{default=0.5.  Controls the size of the legend symbols.}

\item{leg_loc}{default=NULL.  If NULL, the legend will be placed in the
upper right corner of the plot.  Otherwise, a 4-element vector of the form
(x0, x1, y0, y1) can be used to specify the location of the legend.}

\item{...}{Extra options that feed into the plot function.}
}
\value{
an invisible list containing
\itemize{
\item df : the data.frame used to plot the pedigree
\item par_usr : the user coordinates used to plot the pedigree
\item ggplot : the ggplot object if ggplot_gen = TRUE
}
}
\description{
plot objects created with the pedigree function
}
\details{
Two important parameters control the looks of the result.  One is the user
specified maximum width.  The smallest possible width is the maximum number
of subjects on a line, if the user's suggestion is too low it is
increased to 1 + that amount (to give just a little wiggle room). To make a
pedigree where all children are centered under parents simply make the width
large enough, however, the symbols may get very small.

The second is \code{align}, a vector of 2 alignment parameters \code{a} and
\code{b}.
For each set of siblings at a set of locations \code{x} and with parents at
\code{p=c(p1,p2)} the alignment penalty is \deqn{(1/k^a)\sum{i=1}{k} [(x_i -
(p1+p2)/2)]^2} sum(x- mean(p))^2/(k^a) where k is the number of siblings in
the set.
When \code{a = 1} moving a sibship with \code{k} sibs one unit to the
left or right of optimal will incur the same cost as moving one with
only 1 or two sibs out of place.
If \code{a=0} then large sibships are harder to move than small ones,
with the default value \code{a = 1.5} they are slightly easier to move
than small ones.  The rationale for the default is as long as the parents
are somewhere between the first and last siblings the result looks fairly
good, so we are more flexible with the spacing of a large family. By
tethering all the sibs to a single spot they are kept close to each other.
The alignment penalty for spouses is \eqn{b(x_1 - x_2)^2}{b *(x1-x2)^2},
which tends to keep them together.  The size of \code{b} controls the relative
importance of sib-parent and spouse-spouse closeness.
}
\section{Side Effects}{
 Creates plot on current plotting device.
}

\examples{
data(sampleped)
pedAll <- pedigree(sampleped)
#plot(pedAll)

}
\seealso{
\code{\link[=pedigree]{pedigree()}}
}
