% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pedigree.R
\name{pedigree}
\alias{pedigree}
\title{Create a Pedigree object from a data.frame}
\usage{
pedigree(
  ped_df = data.frame(id = character(), dadid = character(), momid = character(), sex =
    numeric(), family = character(), available = numeric(), affected = numeric()),
  rel_df = data.frame(id1 = character(), id2 = character(), code = numeric(), family =
    character()),
  cols_ren_ped = list(indId = "id", fatherId = "dadid", motherId = "momid", gender =
    "sex"),
  cols_ren_rel = list(indId1 = "id1", indId2 = "id2"),
  scales = list(fill = data.frame(order = numeric(), column_values = character(),
    column_mods = character(), mods = numeric(), labels = character(), affected =
    logical(), fill = character(), density = numeric(), angle = numeric()), border =
    data.frame(column = character(), mods = numeric(), labels = character(), border =
    character())),
  hints = list(order = NULL, spouse = NULL),
  normalize = TRUE,
  ...
)
}
\arguments{
\item{ped_df}{A data.frame with the individuals informations.
The minimum columns required are \code{id}, \code{dadid}, \code{momid} and \code{sex}.
The \code{family} column can also be used to specify the family of the
individuals and will be merge to the \code{id} field separated by an
underscore.
The following columns are also recognize \code{steril}, \code{avail}, \code{status},
\code{affected}. They respectively correspond to the sterilisation status,
the availability status, the death status and the affection status
of the individuals. The values recognized for those columns are \code{1} or
\code{0}.}

\item{rel_df}{A data.frame with the special relationships between
individuals.
The minimum columns required are \code{id1}, \code{id2} and \code{code}. The \code{family}
column can also be used to specify the family of the individuals.
The code values are:
\itemize{
\item \code{1} = Monozygotic twin
\item \code{2} = Dizygotic twin
\item \code{3} = twin of unknown zygosity
\item \code{4} = Spouse
The value relation code recognized by the function are the one defined
by the \code{\link[=rel_code_to_factor]{rel_code_to_factor()}} function.
}}

\item{cols_ren_ped}{A named list with the columns to rename for the
pedigree dataframe.}

\item{cols_ren_rel}{A named list with the columns to rename for the
relationship matrix.}

\item{scales}{A list of two data.frame with the scales to use for the
affection status and the other one for the border color (e.g availability).}

\item{hints}{Plotting hints for the pedigree.
This is a list with components \code{order} and \code{spouse}, the second one is
optional.
\itemize{
\item \strong{order} is a numeric vector with one element per subject in the
pedigree.  It determines the relative order of subjects within a sibship, as
well as the relative order of processing for the founder couples. (For this
latter, the female founders are ordered as though they were sisters).
\item \strong{spouse} is a matrix with one row per hinted marriage, usually only
a few marriages in a pedigree will need an added hint, for instance reverse
the plot order of a husband/wife pair. Each row contains the index of the
left spouse, the right hand spouse, and the anchor
(i.e : \code{1} = left, \code{2} = right, \code{0} = either).
Children will preferentially appear under the parents of the anchored spouse.
}}

\item{normalize}{A logical to know if the data should be normalised.}

\item{...}{Other arguments to pass to the function \code{generate_colors}.}
}
\value{
A Pedigree object.
}
\description{
This constructor help to create a \code{Pedigree} object from
different \code{data.frame}.
}
\details{
If any errors are found in the data, the function will return
the data.frame with the errors for the pedigree and the relationship
data.frame.
}
